{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/ng-class-demo/ng-class-demo.component.ts","webpack:///src/app/ng-class-demo/ng-class-demo.component.html","webpack:///src/app/project1/home/home.component.ts","webpack:///src/app/project1/home/home.component.html","webpack:///src/app/project1/projects/projects.component.ts","webpack:///src/app/project1/projects/projects.component.html","webpack:///src/app/project2/dashboard/dashboard.component.ts","webpack:///src/app/project2/dashboard/dashboard.component.html","webpack:///src/app/project2/model.ts","webpack:///src/app/shopping/components/cart-details/cart-details.component.ts","webpack:///src/app/shopping/components/cart-details/cart-details.component.html","webpack:///src/app/shopping/components/cart-sumary/cart-sumary.component.ts","webpack:///src/app/shopping/components/cart-sumary/cart-sumary.component.html","webpack:///src/app/shopping/components/checkout/checkout.component.ts","webpack:///src/app/shopping/components/checkout/checkout.component.html","webpack:///src/app/shopping/components/shopping-home/shopping-home.component.ts","webpack:///src/app/shopping/components/shopping-home/shopping-home.component.html","webpack:///src/app/shopping/components/table-example/table-example.component.ts","webpack:///src/app/shopping/components/table-example/table-example.component.html","webpack:///src/app/shopping/model/cart.model.ts","webpack:///src/app/shopping/model/product.model.ts","webpack:///src/app/shopping/model/static.datasource.ts","webpack:///src/app/shopping/products.service.ts","webpack:///src/app/shopping/shared/authgaurd.guard.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","NgClassDemoComponent","buttons","months","buttonsObj","map","item","year","isActive","selectedYear","obj","console","log","activeButtons","getAtiveButtons","forEach","push","month","today","Date","length","getFullYear","curMon","getMonth","selectAll","deselectAll","save","HomeComponent","projectText","projects","itemCounter","i","splice","addItem","ProjectsComponent","DashboardComponent","model","newTask","newItem","value","items","reset","addNewTask","Model","user","TodoItem","action","status","done","CartDetailsComponent","cartModel","displayedColumns","dataSource","lines","product","quantity","updateQuantity","removeItem","event","filterValue","target","trim","toLowerCase","filter","name","toLocaleLowerCase","startsWith","CartSumaryComponent","CheckoutComponent","productService","cart","cartLines","totalGst","totalWithGst","testValue","cartPrice","myForm","onSubmit","ShoppingHomeComponent","router","selectedCat","selectedPage","productsPerPage","category","changePageNumber","pageSize","pageNum","addItems","navigate","pageIndex","getProductList","slice","getCatagoryList","Array","Math","ceil","fill","x","changeCategory","onPageSizeChange","TableExampleComponent","ELEMENT_DATA","displayedColumns2","dataSource2","cartList","position","weight","symbol","age","Cart","itemCount","find","undefined","CartLine","recalculate","ind","findIndex","line","price","providedIn","Product","desc","StaticDataSource","_products","ProductsService","categoryList","productsChanges","products","from","Set","AuthgaurdGuard","firstTimeLogin","next","state","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ShoppingHomeComponent } from './shopping/components/shopping-home/shopping-home.component';\nimport { CartDetailsComponent } from './shopping/components/cart-details/cart-details.component';\nimport { CheckoutComponent } from './shopping/components/checkout/checkout.component';\nimport { AuthgaurdGuard } from './shopping/shared/authgaurd.guard';\n\nconst routes: Routes = [\n  {\n    path: 'home',\n    component: ShoppingHomeComponent,\n    canActivate: [AuthgaurdGuard],\n  },\n  {\n    path: 'cart',\n    component: CartDetailsComponent,\n    canActivate: [AuthgaurdGuard],\n  },\n  {\n    path: 'checkout',\n    component: CheckoutComponent,\n    canActivate: [AuthgaurdGuard],\n  },\n  { path: '**', redirectTo: '/home' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'To-Do-List';\n}\n","<!-- <div class=\"container\">\n  <app-ng-class-demo></app-ng-class-demo>\n</div> -->\n<!-- <app-home></app-home> -->\n<!-- <app-dashboard></app-dashboard> -->\n<!--<app-shopping-home></app-shopping-home>-->\n\n<nav class=\"navbar navbar-dark bg-danger\">\n  <a class=\"navbar-brand\" routerLink=\"/store\">\n    Online Store\n  </a>\n  <app-cart-sumary></app-cart-sumary>\n  <!-- <form class=\"form-inline\">\n    <input\n      class=\"form-control mr-sm-2\"\n      type=\"search\"\n      placeholder=\"Search\"\n      aria-label=\"Search\"\n    />\n    <button class=\"btn btn-success my-2 my-sm-0\" type=\"submit\">\n      Search\n    </button>\n  </form> -->\n</nav>\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\n\nimport { NgClassDemoComponent } from './ng-class-demo/ng-class-demo.component';\nimport { HomeComponent } from './project1/home/home.component';\nimport { ProjectsComponent } from './project1/projects/projects.component';\nimport { DashboardComponent } from './project2/dashboard/dashboard.component';\nimport { ShoppingHomeComponent } from './shopping/components/shopping-home/shopping-home.component';\nimport { CartSumaryComponent } from './shopping/components/cart-sumary/cart-sumary.component';\nimport { CartDetailsComponent } from './shopping/components/cart-details/cart-details.component';\nimport { CheckoutComponent } from './shopping/components/checkout/checkout.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TableExampleComponent } from './shopping/components/table-example/table-example.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NgClassDemoComponent,\n    HomeComponent,\n    ProjectsComponent,\n    DashboardComponent,\n    ShoppingHomeComponent,\n    CartSumaryComponent,\n    CartDetailsComponent,\n    CheckoutComponent,\n    TableExampleComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatTableModule,\n    MatFormFieldModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ng-class-demo',\n  templateUrl: './ng-class-demo.component.html',\n  styleUrls: ['./ng-class-demo.component.css'],\n})\nexport class NgClassDemoComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n  buttons = [2017, 2018, 2019, 2020];\n  months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug'];\n  buttonsObj = this.buttons.map((item) => {\n    return { year: item, isActive: false };\n  });\n  selectedYear = [];\n\n  selectAll() {\n    this.buttonsObj.map((item) => {\n      item.isActive = true;\n    });\n  }\n  deselectAll() {\n    this.buttonsObj.map((item) => {\n      item.isActive = false;\n    });\n  }\n  buttonClicked(obj) {\n    obj.isActive = obj.isActive ? false : true;\n    console.log(obj);\n  }\n  save() {\n    var activeButtons = this.getAtiveButtons();\n\n    console.log(activeButtons);\n  }\n\n  getAtiveButtons() {\n    var activeButtons = [];\n    this.buttonsObj.forEach((item) => {\n      if (item.isActive) {\n        activeButtons.push(item.year);\n      }\n    });\n    return activeButtons;\n  }\n  isValidMonth(month) {\n    let today = new Date();\n    var activeButtons = this.getAtiveButtons();\n    if (\n      activeButtons.length === 1 &&\n      activeButtons[0] === today.getFullYear()\n    ) {\n      let curMon = today.getMonth();\n      if (month > curMon) return true;\n    }\n    return false;\n  }\n}\n","<div class=\"container\">\n  <div *ngFor=\"let item of buttonsObj\">\n    <button\n      class=\"btn my-2\"\n      (click)=\"buttonClicked(item)\"\n      [ngClass]=\"{\n        'btn-primary': item.isActive,\n        'btn-outline-primary': !item.isActive\n      }\"\n    >\n      {{ item.year }}\n    </button>\n  </div>\n  <button\n    class=\"btn btn-warning mx-2\"\n    *ngFor=\"let month of months; let i = index\"\n    [disabled]=\"getAtiveButtons().length === 1 && isValidMonth(i)\"\n  >\n    {{ month }}\n  </button>\n  <hr />\n  <button class=\"btn btn-danger\" (click)=\"selectAll()\">Select All</button>\n  <button class=\"btn btn-danger ml-4\" (click)=\"deselectAll()\">\n    Deselect All\n  </button>\n  <button class=\"btn btn-success ml-4\" (click)=\"save()\">\n    Save\n  </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n  itemCounter: number;\n  projectText: string = 'Angular Projects';\n  projects = [];\n  constructor() {}\n\n  ngOnInit(): void {\n    this.itemCounter = this.projects.length;\n  }\n\n  addItem() {\n    if (!this.projectText) return;\n    this.projects.push(this.projectText);\n    this.projectText = '';\n    this.itemCounter = this.projects.length;\n  }\n  removeItem(i) {\n    this.projects.splice(i, 1);\n    this.itemCounter = this.projects.length;\n  }\n}\n","<div class=\"bg-primary\">\n  <nav class=\"navbar navbar-expand-sm navbar-dark bg-primary\">\n    <button\n      class=\"navbar-toggler\"\n      type=\"button\"\n      data-toggle=\"collapse\"\n      data-target=\"#navbarNavAltMarkup\"\n      aria-controls=\"navbarNavAltMarkup\"\n      aria-expanded=\"false\"\n      aria-label=\"Toggle navigation\"\n    >\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n      <div class=\"navbar-nav\">\n        <a class=\"nav-item nav-link active\" href=\"#\"\n          >Home <span class=\"sr-only\">(current)</span></a\n        >\n        <a class=\"nav-item nav-link\" href=\"#\">Projects</a>\n      </div>\n    </div>\n  </nav>\n  <div class=\"container border border-info\">\n    <div class=\"row header text-center font-weight-bold text-white\">\n      <div class=\"col my-2\">\n        <span>Add ToDo task</span>\n      </div>\n      <div class=\"col my-2\">\n        <span>ToDo List( {{ itemCounter }} )</span>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col\">\n        <form>\n          <div class=\"form-group\">\n            <label for=\"todolist\"\n              >Please use this to new to-do list and remove it</label\n            >\n            <input\n              type=\"email\"\n              class=\"form-control form-control-lg\"\n              id=\"todolist\"\n              placeholder=\"Please add your task heres\"\n              [(ngModel)]=\"projectText\"\n              name=\"todolist\"\n            />\n            <button (click)=\"addItem()\" class=\"btn btn-success my-2\">\n              Add Task\n            </button>\n          </div>\n        </form>\n      </div>\n      <div class=\"col\">\n        <ul class=\"list-group\">\n          <li\n            class=\"list-group-item\"\n            *ngFor=\"let item of projects; let i = index\"\n            (dblclick)=\"removeItem(i)\"\n          >\n            {{ item }}\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.css']\n})\nexport class ProjectsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>projects works!</p>\n","import { Component, OnInit, ElementRef } from '@angular/core';\nimport { Model, TodoItem } from '../model';\nimport { NgModel } from '@angular/forms';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n})\nexport class DashboardComponent implements OnInit {\n  model = new Model();\n  constructor() {}\n  email;\n  ngOnInit(): void {}\n\n  addNewTask(newTask: NgModel) {\n    console.log(newTask);\n    let newItem = new TodoItem(newTask.value, false);\n    this.model.items.push(newItem);\n    newTask.reset();\n  }\n}\n","<div class=\"container\">\n  <h3 class=\"bg-danger text-white p-2 text-center\">\n    {{ model.user }} To Do list\n  </h3>\n  <div class=\"row my-2\">\n    <div class=\"col-6\">\n      <input\n        type=\"text\"\n        name=\"todotext\"\n        class=\"form-control\"\n        #todotext=\"ngModel\"\n        required\n        ngModel\n      />\n      <div\n        class=\"alert alert-danger mt-1\"\n        *ngIf=\"!todotext.valid && todotext.touched\"\n      >\n        Enter a valid task\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <button class=\"btn btn-success\" (click)=\"addNewTask(todotext)\">\n        Add new task\n      </button>\n    </div>\n  </div>\n  <table class=\"table table-striped\">\n    <thead>\n      <tr class=\"bg-primary\">\n        <th scope=\"col\"># Index</th>\n        <th scope=\"col\">Tasks</th>\n        <th scope=\"col\">Action</th>\n        <th scope=\"col\">Completed</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let item of model.items; let i = index\">\n        <td>{{ i + 1 }}</td>\n        <td>{{ item.action }}</td>\n        <td><input type=\"checkbox\" [(ngModel)]=\"item.done\" /></td>\n        <td [ngSwitch]=\"item.done\">\n          <span *ngSwitchCase=\"true\">Yes</span>\n          <span *ngSwitchDefault>No</span>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n","export class Model {\r\n  user: string;\r\n  items: TodoItem[];\r\n  constructor() {\r\n    this.user = 'Deepak M N';\r\n    this.items = [\r\n      new TodoItem('Buy Flowers', false),\r\n      new TodoItem('Get Shoes', true),\r\n      new TodoItem('Collect Tickets', true),\r\n      new TodoItem('Do Workouts', false),\r\n    ];\r\n  }\r\n}\r\n\r\nexport class TodoItem {\r\n  action: string;\r\n  done: boolean;\r\n  constructor(action, status) {\r\n    this.action = action;\r\n    this.done = status;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Cart } from '../../model/cart.model';\nimport { Product } from '../../model/product.model';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'app-cart-details',\n  templateUrl: './cart-details.component.html',\n  styleUrls: ['./cart-details.component.css'],\n})\nexport class CartDetailsComponent implements OnInit {\n  displayedColumns: string[] = [\n    'quantity',\n    'product',\n    'price',\n    'subtotal',\n    'remove',\n  ];\n  dataSource;\n  constructor(public cartModel: Cart) {}\n\n  ngOnInit(): void {\n    this.dataSource = new MatTableDataSource(this.cartModel.lines);\n  }\n\n  updateCartList(product: Product, quantity: number) {\n    this.cartModel.updateQuantity(product, +quantity);\n  }\n  renoveFromCart(id: number) {\n    this.cartModel.removeItem(+id);\n    this.dataSource = this.cartModel.lines;\n  }\n  applyFilter(event: Event) {\n    let filterValue = (event.target as HTMLInputElement).value;\n    filterValue = filterValue.trim().toLowerCase();\n    this.dataSource = this.cartModel.lines.filter((item) =>\n      item.product.name.toLocaleLowerCase().startsWith(filterValue)\n    );\n  }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col text-center\"><h3>Your Cart</h3></div>\n  </div>\n  <!--<div class=\"row\">\n     <table class=\"table table-bordered\">\n      <thead class=\"\">\n        <tr>\n          <th scope=\"col\">Quantity</th>\n          <th scope=\"col\">Product</th>\n          <th scope=\"col\">Price</th>\n          <th scope=\"col\">Subtotal</th>\n          <th scope=\"col\"></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngIf=\"cartModel.itemCount === 0\">\n          <td colspan=\"5\">Your Cart is empty . Please add item to cart.</td>\n        </tr>\n        <tr *ngFor=\"let item of cartModel.lines\">\n          <td>\n            <input\n              type=\"number\"\n              class=\"form-control\"\n              style=\"width: 5em;\"\n              [value]=\"item.quantity\"\n              (change)=\"updateCartList(item.product, $event.target.value)\"\n              min=\"1\"\n            />\n          </td>\n          <td>{{ item.product.name }}</td>\n          <td>{{ item.product.price | currency: \"INR\":\"symbol\":\"2.2-2\" }}</td>\n          <td class=\"text-right\">\n            <strong>{{\n              item.totalPrice | currency: \"INR\":\"symbol\":\"2.2-2\"\n            }}</strong>\n          </td>\n          <td>\n            <button\n              class=\"btn btn-danger btn-sm\"\n              (click)=\"renoveFromCart(item.product.id)\"\n            >\n              Remove\n            </button>\n          </td>\n        </tr>\n        <tr class=\"text-right bg-light\">\n          <td colspan=\"3\"><strong>Total :</strong></td>\n          <td>\n            <strong>{{\n              cartModel.cartPrice | currency: \"INR\":\"symbol\":\"2.2-2\"\n            }}</strong>\n          </td>\n          <td></td>\n        </tr>\n      </tbody>\n    </table>\n  </div>-->\n\n  <!-- Table using angular material -->\n  <div class=\"row\">\n    <div class=\"col\">\n      <div *ngIf=\"cartModel.itemCount !== 0; else emptyList\">\n        <mat-form-field>\n          <mat-label>Filter</mat-label>\n          <input matInput (keyup)=\"applyFilter($event)\" />\n        </mat-form-field>\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n          <!--- Note that these columns can be defined in any order.\n              The actual rendered columns are set as a property on the row definition\" -->\n\n          <!-- Quantity Column -->\n          <ng-container matColumnDef=\"quantity\">\n            <th mat-header-cell *matHeaderCellDef style=\"width: 15%;\">\n              Quantity\n            </th>\n            <td mat-cell *matCellDef=\"let element\">\n              <input\n                type=\"number\"\n                class=\"form-control\"\n                style=\"width: 5em;\"\n                [value]=\"element.quantity\"\n                (change)=\"updateCartList(element.product, $event.target.value)\"\n                min=\"1\"\n              />\n            </td>\n            <td mat-footer-cell *matFooterCellDef></td>\n          </ng-container>\n\n          <!-- Product Name Column -->\n          <ng-container matColumnDef=\"product\">\n            <th mat-header-cell *matHeaderCellDef style=\"width: 40%;\">\n              Product\n            </th>\n            <td mat-cell *matCellDef=\"let element\">\n              {{ element.product.name }}\n            </td>\n            <td mat-footer-cell *matFooterCellDef></td>\n          </ng-container>\n\n          <!-- Price Column -->\n          <ng-container matColumnDef=\"price\">\n            <th mat-header-cell *matHeaderCellDef style=\"width: 20%;\">Price</th>\n            <td mat-cell *matCellDef=\"let element\">\n              {{ element.product.price | currency: \"INR\":\"symbol\":\"2.2-2\" }}\n            </td>\n            <td mat-footer-cell *matFooterCellDef></td>\n          </ng-container>\n\n          <!-- Subtotal Column -->\n          <ng-container matColumnDef=\"subtotal\">\n            <th mat-header-cell *matHeaderCellDef style=\"width: 20%;\">\n              Sub Total\n            </th>\n            <td mat-cell *matCellDef=\"let element\">\n              {{ element.totalPrice | currency: \"INR\":\"symbol\":\"2.2-2\" }}\n            </td>\n            <td mat-footer-cell *matFooterCellDef class=\"text-center\">\n              <b>TOTAL :</b>\n            </td>\n          </ng-container>\n          <!-- Remove Column -->\n          <ng-container matColumnDef=\"remove\">\n            <th mat-header-cell *matHeaderCellDef></th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button\n                class=\"btn btn-danger btn-sm\"\n                (click)=\"renoveFromCart(element.product.id)\"\n              >\n                Remove\n              </button>\n            </td>\n            <td mat-footer-cell *matFooterCellDef>\n              <b>{{\n                cartModel.cartPrice | currency: \"INR\":\"symbol\":\"2.2-2\"\n              }}</b>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n          <tr mat-footer-row *matFooterRowDef=\"displayedColumns\"></tr>\n        </table>\n      </div>\n      <ng-template #emptyList>\n        <h2>\n          <strong class=\"text-center\"\n            >Your Cart is empty . Please add item to cart.</strong\n          >\n        </h2>\n      </ng-template>\n    </div>\n  </div>\n  <div class=\"row mt-3\">\n    <div class=\"col-6\">\n      <button class=\"btn btn-primary mx-4\" routerLink=\"/store\">\n        Continue Shopping\n      </button>\n      <button class=\"btn btn-secondary\" routerLink=\"/checkout\">Checkout</button>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Cart } from '../../model/cart.model';\n\n@Component({\n  selector: 'app-cart-sumary',\n  templateUrl: './cart-sumary.component.html',\n  styleUrls: ['./cart-sumary.component.css'],\n})\nexport class CartSumaryComponent implements OnInit {\n  constructor(public cartModel: Cart) {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"float-right text-white\">\r\n  <small\r\n    >Your Cart:\r\n    <span *ngIf=\"cartModel.itemCount > 0; else noItem\"\r\n      >{{ cartModel.itemCount }} items -\r\n      {{ cartModel.cartPrice | currency: \"INR\":\"symbol\":\"2.2-2\" }}</span\r\n    >\r\n    <ng-template #noItem> (Empty)</ng-template>\r\n    <button\r\n      class=\"btn btn-sm bg-dark text-white ml-2\"\r\n      [disabled]=\"cartModel.itemCount === 0\"\r\n    >\r\n      <i class=\"fa fa-shopping-cart fa-2x\" aria-hidden=\"true\"></i>\r\n    </button>\r\n  </small>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { ProductsService } from '../../products.service';\nimport { Product } from '../../model/product.model';\nimport { Cart } from '../../model/cart.model';\nimport { NgForm } from '@angular/forms';\nimport { ICheckout } from '../../model/checkout.model';\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.css'],\n})\nexport class CheckoutComponent implements OnInit {\n  constructor(private productService: ProductsService, public cart: Cart) {}\n  cartLines = [];\n  totalGst = 0;\n  totalWithGst = 0;\n  checkOutDetails: ICheckout;\n  testValue = '';\n  ngOnInit(): void {\n    this.cartLines = this.cart.lines;\n    this.totalGst = (this.cart.cartPrice * 12) / 100;\n    this.totalWithGst = this.totalGst + this.cart.cartPrice;\n  }\n  onSubmit(myForm: NgForm) {\n    console.log(myForm);\n  }\n}\n","<div class=\"container-fluid\">\n  <form (ngSubmit)=\"onSubmit(checkutForm)\" #checkutForm=\"ngForm\">\n    <div class=\"row m-4 border border-primary rounded-lg\">\n      <!---->\n      <div class=\"col-md-5 mt-2\">\n        <h3>Billing Address</h3>\n        <hr />\n        <div class=\"form-row\">\n          <div class=\"form-group col-sm-6\" [class.has-error]=\"fname.invalid\">\n            <label for=\"fname\" class=\"control-label\">First Name</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"fname\"\n              name=\"fname\"\n              required\n              [(ngModel)]=\"testValue\"\n              #fname=\"ngModel\"\n            />\n            <div class=\"help-block\" *ngIf=\"!fname.valid\">\n              Please enter fname\n            </div>\n          </div>\n\n          <div class=\"form-group col-sm-6\">\n            <label for=\"lname\">Last Name</label>\n            <input type=\"text\" class=\"form-control\" id=\"lname\" />\n          </div>\n        </div>\n        <div class=\"valid-feedback\">\n          Looks good!\n        </div>\n        <div class=\"form-group\">\n          <label for=\"address\">Address</label>\n          <input type=\"text\" class=\"form-control\" id=\"address\" />\n        </div>\n\n        <div class=\"form-row\">\n          <div class=\"form-group col-sm-6\">\n            <label for=\"street\">Street</label>\n            <input type=\"text\" class=\"form-control\" name=\"\" id=\"street\" />\n          </div>\n          <div class=\"form-group col-sm-6\">\n            <label for=\"city\">City</label>\n            <input type=\"text\" class=\"form-control\" name=\"\" id=\"city\" />\n          </div>\n        </div>\n\n        <div class=\"form-row\">\n          <div class=\"form-group col-sm-6\">\n            <label for=\"state\">State</label>\n            <input type=\"text\" class=\"form-control\" id=\"state\" />\n          </div>\n          <div class=\"form-group col-sm-6\">\n            <label for=\"country\">Country</label>\n            <input type=\"text\" class=\"form-control\" id=\"country\" />\n          </div>\n        </div>\n        <div class=\"form-row\">\n          <div class=\"form-group col-sm-6\">\n            <label for=\"zip\">Zip</label>\n            <input type=\"number\" class=\"form-control\" id=\"zip\" />\n          </div>\n        </div>\n      </div>\n\n      <!-- Payment Section-->\n      <div class=\"col-md-4 mt-2\">\n        <div class=\"paymentOption mb-2\">\n          <h3>Payment Method</h3>\n          <hr />\n          <div class=\"form-check form-check-inline\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"paymentOption\"\n              id=\"card\"\n              value=\"card\"\n            />\n            <label class=\"form-check-label\" for=\"card\">Credit/DebitCard</label>\n          </div>\n          <div class=\"form-check form-check-inline\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"paymentOption\"\n              id=\"upi\"\n              value=\"upi\"\n            />\n            <label class=\"form-check-label\" for=\"upi\">UPI</label>\n          </div>\n          <div class=\"form-check form-check-inline\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"paymentOption\"\n              id=\"netBanking\"\n              value=\"netBanking\"\n            />\n            <label class=\"form-check-label\" for=\"inlinnetBankingeRadio3\"\n              >Net Banking</label\n            >\n          </div>\n        </div>\n        <div class=\"cardDetails\">\n          <div class=\"form-group\">\n            <label for=\"cardName\">Name on Card</label>\n            <input type=\"text\" name=\"\" id=\"cardName\" class=\"form-control\" />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"cardNumber\">Card Number</label>\n            <input\n              type=\"text\"\n              name=\"\"\n              id=\"cardNumber\"\n              class=\"form-control\"\n              placeholder=\"1111-1111-1111-1111\"\n            />\n          </div>\n          <div class=\"form-row\">\n            <div class=\"form-group col-sm-8\">\n              <label for=\"month\">Expiry Date(month yyyy)</label>\n              <input\n                type=\"month\"\n                class=\"form-control\"\n                id=\"month\"\n                value=\"2020-01\"\n              />\n            </div>\n            <div class=\"form-group col-sm-4\">\n              <label for=\"cvv\">CVV</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"cvv\"\n                size=\"3\"\n                pattern=\"[A-Za-z0-9]{3}\"\n              />\n            </div>\n          </div>\n        </div>\n        <div class=\"upiDetails\">\n          <div class=\"form-group\">\n            <label for=\"cardName\">Enter Your UPI</label>\n            <input\n              type=\"text\"\n              name=\"\"\n              id=\"cardName\"\n              class=\"form-control\"\n              placeholder=\"abcdef@upi\"\n            />\n          </div>\n        </div>\n      </div>\n      <!-- Cart section -->\n      <div class=\"col-md-3 mt-2\">\n        <h3>Products</h3>\n        <hr />\n        <ul class=\"list-group\">\n          <li\n            *ngFor=\"let item of cartLines\"\n            class=\"list-group-item d-flex justify-content-between align-items-center\"\n          >\n            <span class=\"float-left font-weight-bolder\"\n              >{{ item.product.name }} * {{ item.quantity }}</span\n            >\n            <span class=\"badge\">{{\n              item.totalPrice | currency: \"INR\":\"symbol\":\"2.2-2\"\n            }}</span>\n          </li>\n          <li class=\"list-group-item mb-1 p-2\">\n            <h5 class=\"float-right mb-1\">\n              SGST 6% :\n              <span class=\"badge mt-1 mr-2\">{{\n                totalGst / 2 | currency: \"INR\":\"symbol\":\"2.2-2\"\n              }}</span>\n              CGST 6% :\n              <span class=\"badge mt-1 mr-2\">{{\n                totalGst / 2 | currency: \"INR\":\"symbol\":\"2.2-2\"\n              }}</span>\n            </h5>\n            <span class=\"float-right font-weight-bolder\">\n              Total GST 12%:\n              <span class=\"badge float-right mt-1 mx-2\">{{\n                totalGst | currency: \"INR\":\"symbol\":\"2.2-2\"\n              }}</span>\n            </span>\n          </li>\n          <li\n            class=\"list-group-item d-flex justify-content-between align-items-center font-weight-bolder\"\n          >\n            Total :\n            <span class=\"badge fontSize\">{{\n              totalWithGst | currency: \"INR\":\"symbol\":\"2.2-2\"\n            }}</span>\n          </li>\n        </ul>\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\">Continue Shopping</button>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ProductsService } from '../../products.service';\nimport { Product } from '../../model/product.model';\nimport { Cart } from '../../model/cart.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-shopping-home',\n  templateUrl: './shopping-home.component.html',\n  styleUrls: ['./shopping-home.component.css'],\n})\nexport class ShoppingHomeComponent implements OnInit {\n  selectedCat = '';\n  selectedPage = 1;\n  productsPerPage = 4;\n\n  constructor(\n    private productService: ProductsService,\n    private cartModel: Cart,\n    private router: Router\n  ) {}\n  public get products(): Product[] {\n    var pageIndex = (this.selectedPage - 1) * this.productsPerPage;\n    return this.productService\n      .getProductList(this.selectedCat)\n      .slice(pageIndex, pageIndex + this.productsPerPage);\n  }\n\n  public get categoryList() {\n    return this.productService.getCatagoryList();\n  }\n\n  ngOnInit(): void {\n    // this.products = this.productService.getProductList(\n    //   this.selectedCat,\n    //   this.selectedPage,\n    //   this.productsPerPage\n    // );\n    //this.categoryList = this.productService.getCatagoryList();\n  }\n  changeCategory(category: string) {\n    this.selectedCat = category;\n    this.changePageNumber(1);\n    // this.products = this.productService.getProductList(\n    //   this.selectedCat,\n    //   this.selectedPage,\n    //   this.productsPerPage\n    // );\n  }\n  onPageSizeChange(pageSize: string) {\n    this.productsPerPage = +pageSize;\n  }\n\n  get pageNumbers(): number[] {\n    return new Array(\n      Math.ceil(\n        this.productService.getProductList(this.selectedCat).length /\n          this.productsPerPage\n      )\n    )\n      .fill(0)\n      .map((x, i) => i + 1);\n  }\n  changePageNumber(pageNum: number) {\n    this.selectedPage = pageNum;\n  }\n\n  addProductsToCart(product: Product) {\n    this.cartModel.addItems(product, 1);\n    this.router.navigate(['/cart']);\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-3 bg-info\">\n    <h5 class=\"text-center text-white\">\n      Categories({{ categoryList.length }})\n    </h5>\n    <div class=\"p-3\">\n      <button\n        class=\"btn btn-outline-warning btn-lg btn-block\"\n        (click)=\"changeCategory('')\"\n        [class.active]=\"selectedCat === ''\"\n      >\n        Home\n      </button>\n      <button\n        class=\"btn btn-outline-warning btn-lg btn-block\"\n        *ngFor=\"let cat of categoryList\"\n        [class.active]=\"cat === selectedCat\"\n        (click)=\"changeCategory(cat)\"\n      >\n        {{ cat }}\n      </button>\n    </div>\n  </div>\n  <div class=\"col-9 bg-success pr-4 text-light\">\n    <h5 class=\"text-center\">Products({{ products.length }})</h5>\n    <ul class=\"list-group\">\n      <li\n        class=\"list-group-item mb-1 bg-dark p-2\"\n        *ngFor=\"let product of products\"\n      >\n        <h5>\n          {{ product.name }}\n          <span class=\"badge float-right fontSize\">{{\n            product.price | currency: \"INR\":\"symbol\":\"2.2-2\"\n          }}</span>\n        </h5>\n        <span>{{ product.desc }} | ({{ product.category }})</span>\n        <button\n          class=\"btn btn-sm bg-primary float-right\"\n          (click)=\"addProductsToCart(product)\"\n        >\n          Add To Cart\n        </button>\n      </li>\n    </ul>\n    <div class=\"form-inline float-left my-1\">\n      <select\n        class=\"form-control\"\n        [value]=\"productsPerPage\"\n        (change)=\"onPageSizeChange($event.target.value)\"\n      >\n        <option value=\"4\">4 products per page</option>\n        <option value=\"6\">6 products per page</option>\n        <option value=\"8\">8 products per page</option>\n      </select>\n    </div>\n    <div class=\"btn-group float-right\">\n      <button\n        class=\"btn btn-outline-dark\"\n        *ngFor=\"let page of pageNumbers\"\n        (click)=\"changePageNumber(page)\"\n        [class.active]=\"page === selectedPage\"\n      >\n        {{ page }}\n      </button>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-table-example',\n  templateUrl: './table-example.component.html',\n  styleUrls: ['./table-example.component.css'],\n})\nexport class TableExampleComponent implements OnInit {\n  constructor() {}\n  @Input('cartData') cartList: any;\n  ngOnInit(): void {\n    console.log(this.cartList);\n    this.dataSource2 = this.cartList.lines;\n  }\n  displayedColumns: string[] = [\n    'position',\n    'name',\n    'weight',\n    'symbol',\n    'dataObj',\n  ];\n  dataSource = ELEMENT_DATA;\n  displayedColumns2: string[] = [\n    'quantity',\n    'product',\n    'price',\n    'subtotal',\n    'remove',\n  ];\n  dataSource2 = {};\n}\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n  obj: {};\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {\n    position: 1,\n    name: 'Hydrogen',\n    weight: 1.0079,\n    symbol: 'H',\n    obj: { name: 'deepak', age: 30 },\n  },\n  {\n    position: 2,\n    name: 'Helium',\n    weight: 4.0026,\n    symbol: 'He',\n    obj: { name: 'deepak', age: 30 },\n  },\n  {\n    position: 3,\n    name: 'Lithium',\n    weight: 6.941,\n    symbol: 'Li',\n    obj: { name: 'deepak', age: 30 },\n  },\n  {\n    position: 4,\n    name: 'Beryllium',\n    weight: 9.0122,\n    symbol: 'Be',\n    obj: { name: 'deepak', age: 30 },\n  },\n  {\n    position: 5,\n    name: 'Boron',\n    weight: 10.811,\n    symbol: 'B',\n    obj: { name: 'deepak', age: 30 },\n  },\n  {\n    position: 6,\n    name: 'Carbon',\n    weight: 12.0107,\n    symbol: 'C',\n    obj: { name: 'deepak', age: 30 },\n  },\n  {\n    position: 7,\n    name: 'Nitrogen',\n    weight: 14.0067,\n    symbol: 'N',\n    obj: { name: 'deepak', age: 30 },\n  },\n  {\n    position: 8,\n    name: 'Oxygen',\n    weight: 15.9994,\n    symbol: 'O',\n    obj: { name: 'deepak', age: 30 },\n  },\n  {\n    position: 9,\n    name: 'Fluorine',\n    weight: 18.9984,\n    symbol: 'F',\n    obj: { name: 'deepak', age: 30 },\n  },\n  {\n    position: 10,\n    name: 'Neon',\n    weight: 20.1797,\n    symbol: 'Ne',\n    obj: { name: 'deepak', age: 30 },\n  },\n];\n","<table mat-table [dataSource]=\"dataSource2\" class=\"mat-elevation-z8\">\n  <!--- Note that these columns can be defined in any order.\n        The actual rendered columns are set as a property on the row definition\" -->\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"quantity\">\n    <th mat-header-cell *matHeaderCellDef style=\"width: 10%;\">Quantity</th>\n    <td mat-cell *matCellDef=\"let element\">\n      <input\n        type=\"number\"\n        class=\"form-control\"\n        style=\"width: 5em;\"\n        [value]=\"element.quantity\"\n        min=\"1\"\n      />\n    </td>\n    <td mat-footer-cell *matFooterCellDef>Total</td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"product\">\n    <th mat-header-cell *matHeaderCellDef style=\"width: 50%;\">Product</th>\n    <td mat-cell *matCellDef=\"let element\">{{ element.product.name }}</td>\n    <td mat-footer-cell *matFooterCellDef=\"let element\"></td>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"price\">\n    <th mat-header-cell *matHeaderCellDef>Price</th>\n    <td mat-cell *matCellDef=\"let element\">{{ element.product.price }}</td>\n    <td mat-footer-cell *matFooterCellDef=\"let element\"></td>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"subtotal\">\n    <th mat-header-cell *matHeaderCellDef>Sub Total</th>\n    <td mat-cell *matCellDef=\"let element\">{{ element.totalPrice }}</td>\n    <td mat-footer-cell *matFooterCellDef=\"let element\"></td>\n  </ng-container>\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"remove\">\n    <th mat-header-cell *matHeaderCellDef></th>\n    <td mat-cell *matCellDef=\"let element\">\n      <button class=\"btn btn-danger btn-sm\">\n        Remove\n      </button>\n    </td>\n    <td mat-footer-cell *matFooterCellDef>\n      {{ cartList.cartPrice }}\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns2\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns2\"></tr>\n  <tr mat-footer-row *matFooterRowDef=\"displayedColumns2\"></tr>\n</table>\n","import { Product } from './product.model';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class Cart {\r\n  lines: CartLine[] = [];\r\n  itemCount: number = 0;\r\n  cartPrice: number = 0;\r\n\r\n  //Add products to cart line\r\n  addItems(product: Product, quantity: number) {\r\n    let item = this.lines.find((lines) => lines.product.id === product.id);\r\n    if (item !== undefined) {\r\n      item.quantity += quantity;\r\n    } else {\r\n      this.lines.push(new CartLine(product, quantity));\r\n    }\r\n    this.recalculate();\r\n  }\r\n\r\n  //Update quantity of product\r\n  updateQuantity(product: Product, quantity: number) {\r\n    let item = this.lines.find((lines) => lines.product.id === product.id);\r\n    if (item !== undefined) {\r\n      item.quantity = quantity;\r\n    }\r\n    this.recalculate();\r\n  }\r\n\r\n  //Remove productsfrom the lineCart\r\n  removeItem(id: number) {\r\n    let ind = this.lines.findIndex((item) => item.product.id === id);\r\n    this.lines.splice(ind, 1);\r\n    this.recalculate();\r\n  }\r\n  clear() {\r\n    this.lines = [];\r\n    this.itemCount = 0;\r\n    this.cartPrice = 0;\r\n  }\r\n  private recalculate() {\r\n    this.itemCount = 0;\r\n    this.cartPrice = 0;\r\n    this.lines.forEach((line) => {\r\n      this.itemCount += line.quantity;\r\n      this.cartPrice += line.quantity * line.product.price;\r\n    });\r\n  }\r\n}\r\n\r\nexport class CartLine {\r\n  constructor(public product: Product, public quantity: number) {}\r\n  get totalPrice(): number {\r\n    return this.quantity * this.product.price;\r\n  }\r\n}\r\n","export class Product {\r\n  constructor(\r\n    public id?: number,\r\n    public name?: string,\r\n    public category?: string,\r\n    public desc?: string,\r\n    public price?: number\r\n  ) {}\r\n}\r\n","import { Product } from './product.model';\r\nimport { Injectable } from '@angular/core';\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class StaticDataSource {\r\n  private _products: Product[] = [\r\n    new Product(1, 'Lace up Shoes', 'Category 1', 'Sneaker Shoes', 1000),\r\n    new Product(2, 'T-Shirt', 'Category 2', 'Necked T-Shirt', 350),\r\n    new Product(3, 'Cooler', 'Category 3', 'Air Cooler', 5000),\r\n    new Product(4, 'Refrigerator', 'Category 3', 'Hair Refrigerator', 10000),\r\n    new Product(5, 'Lace up Shoes', 'Category 1', 'Sneaker Shoes', 1000),\r\n    new Product(6, 'Lace up Shoes', 'Category 1', 'Sneaker Shoes', 1000),\r\n  ];\r\n  public get products(): Product[] {\r\n    return this._products;\r\n  }\r\n}\r\n","import { Injectable, OnInit } from '@angular/core';\nimport { StaticDataSource } from './model/static.datasource';\nimport { Product } from './model/product.model';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductsService implements OnInit {\n  categoryList = [];\n  productsChanges = new Subject<Product[]>();\n  products: Product[] = this.dataSource.products;\n  constructor(private dataSource: StaticDataSource) {}\n  ngOnInit() {}\n  getProductList(category: string) {\n    return this.products.filter(\n      (product) => !category || product.category === category\n    );\n  }\n  getCatagoryList() {\n    this.categoryList = Array.from(\n      new Set(this.products.map((item) => item.category))\n    );\n    return this.categoryList;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ShoppingHomeComponent } from '../components/shopping-home/shopping-home.component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthgaurdGuard implements CanActivate {\n  firstTimeLogin: boolean = true;\n  constructor(private router: Router) {}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    if (this.firstTimeLogin) {\n      this.firstTimeLogin = false;\n      if (next.component !== ShoppingHomeComponent) {\n        this.router.navigate(['/home']);\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}